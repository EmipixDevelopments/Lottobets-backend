var e;e=function(e){function r(r){return function(n,t){var i=t.line,o=n.getLine(i);function l(r){for(var l,f=t.ch,a=0;;){var u=f<=0?-1:o.lastIndexOf(r[0],f-1);if(-1!=u){if(1==a&&u<t.ch)break;if(l=n.getTokenTypeAt(e.Pos(i,u+1)),!/^(comment|string)/.test(l))return{ch:u+1,tokenType:l,pair:r};f=u-1}else{if(1==a)break;a=1,f=o.length}}}function f(r){var t,o,l=1,f=n.lastLine(),a=r.ch;e:for(var u=i;u<=f;++u)for(var s=n.getLine(u),c=u==i?a:0;;){var d=s.indexOf(r.pair[0],c),g=s.indexOf(r.pair[1],c);if(d<0&&(d=s.length),g<0&&(g=s.length),(c=Math.min(d,g))==s.length)break;if(n.getTokenTypeAt(e.Pos(u,c+1))==r.tokenType)if(c==d)++l;else if(!--l){t=u,o=c;break e}++c}return null==t||i==t?null:{from:e.Pos(i,a),to:e.Pos(t,o)}}for(var a=[],u=0;u<r.length;u++){var s=l(r[u]);s&&a.push(s)}for(a.sort((function(e,r){return e.ch-r.ch})),u=0;u<a.length;u++){var c=f(a[u]);if(c)return c}return null}}e.registerHelper("fold","brace",r([["{","}"],["[","]"]])),e.registerHelper("fold","brace-paren",r([["{","}"],["[","]"],["(",")"]])),e.registerHelper("fold","import",(function(r,n){function t(n){if(n<r.firstLine()||n>r.lastLine())return null;var t=r.getTokenAt(e.Pos(n,1));if(/\S/.test(t.string)||(t=r.getTokenAt(e.Pos(n,t.end+1))),"keyword"!=t.type||"import"!=t.string)return null;for(var i=n,o=Math.min(r.lastLine(),n+10);i<=o;++i){var l=r.getLine(i).indexOf(";");if(-1!=l)return{startCh:t.end,end:e.Pos(i,l)}}}var i,o=n.line,l=t(o);if(!l||t(o-1)||(i=t(o-2))&&i.end.line==o-1)return null;for(var f=l.end;;){var a=t(f.line+1);if(null==a)break;f=a.end}return{from:r.clipPos(e.Pos(o,l.startCh+1)),to:f}})),e.registerHelper("fold","include",(function(r,n){function t(n){if(n<r.firstLine()||n>r.lastLine())return null;var t=r.getTokenAt(e.Pos(n,1));return/\S/.test(t.string)||(t=r.getTokenAt(e.Pos(n,t.end+1))),"meta"==t.type&&"#include"==t.string.slice(0,8)?t.start+8:void 0}var i=n.line,o=t(i);if(null==o||null!=t(i-1))return null;for(var l=i;null!=t(l+1);)++l;return{from:e.Pos(i,o+1),to:r.clipPos(e.Pos(l))}}))},"object"==typeof exports&&"object"==typeof module?e(require("../../lib/codemirror")):"function"==typeof define&&define.amd?define(["../../lib/codemirror"],e):e(CodeMirror);